{"version":3,"sources":["assets/background.jpg","assets/header-background.jpg","styles.js","pages/Landing.js","components/global/Header.js","utils/fetchWeather.js","utils/sortWeatherData.js","utils/setColorFromCurrentTemp.js","pages/DataDisplay.js","utils/makeLineGraph.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","createGlobalStyle","LandingContainer","styled","div","Background","LandingForm","form","StyledHeader","header","HeaderBackground","DisplayHeader","CurrentTemp","props","tempColor","DisplayTitle","DataInfo","GraphDiv","Dolores","h1","hr","Landing","state","zip","handleChange","e","setState","target","value","this","linkUrl","type","name","autoComplete","onChange","to","PureComponent","Header","fetchWeather","a","fetch","keyResponse","json","keyData","ParentCity","Key","weatherResponse","weatherData","weatherObject","cityData","sortWeatherData","data","console","log","map","d","date","Date","DateTime","temp","Temperature","Value","setColorFromCurrentTemp","currentTemp","DataDisplay","match","params","cityName","stateName","rainProp","completedMount","tempAvg","tempLow","tempHigh","highColor","lowColor","getWeather","then","results","EnglishName","AdministrativeArea","ID","PrecipitationProbability","Math","floor","reduce","b","max","min","margin","x","d3","range","y","graphLine","svg","append","attr","domain","transition","duration","call","mouseG","style","lines","document","getElementsByClassName","mousePerLine","selectAll","enter","on","mouse","i","beginning","end","getTotalLength","pos","getPointAtLength","select","text","invert","toFixed","makeLineGraph","className","id","size","color","App","exact","path","component","Boolean","window","location","hostname","require","config","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b038554f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.c5a1e20a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/header-background.d411451b.jpg\";","import styled, { createGlobalStyle } from 'styled-components';\nimport Background from './assets/background.jpg';\nimport HeaderBackground from './assets/header-background.jpg';\n\ncreateGlobalStyle`\n    @import url('https://fonts.googleapis.com/css?family=Sarala:400,700&display=swap');\n`\n\nexport const LandingContainer = styled.div`\n    height: 100vh;\n    \n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-top: 14%;\n    background: url(${Background}) no-repeat center center fixed; \n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  background-size: cover;;\n    overflow: hidden;\n    background-repeat: no-repeat;\n    h1 {\n        font-size: 8rem;\n        color: white;\n        font-family: 'Sarala', sans-serif;\n    }\n    p {\n        font-size: 2rem;\n        color: white;\n        font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    }\n`;\n\nexport const LandingForm = styled.form`\n    display: flex; \n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    input {\n        margin: 2rem;\n        border: none;\n        height: 3rem;\n        width: 15rem;\n        padding: .5rem 1rem;\n        font-size: 1.3rem;\n        color: grey;\n    }\n\n    button {\n        border: none;\n        padding: 1rem 2rem;\n        color: white;\n        background: coral;\n        text-transform: uppercase;\n        font-size: 1.25rem;\n        font-family: 'Sarala', sans-serif;\n        font-weight: bold;\n    }\n    button:hover {\n        cursor: pointer;\n    }\n`;\n\nexport const StyledHeader = styled.header`\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    background: url(${HeaderBackground});\n    height: 7rem;\n    padding-right: 4rem;\n    a {\n        color: white;\n        text-decoration: none;\n        text-transform: uppercase;\n        font-family: 'Sarala', sans-serif;\n        font-weight: bold;\n    }\n`;\n\nexport const DisplayHeader = styled.div`\n    display: flex;\n    flex-grow: 1 2;\n    justify-content: space-between;\n    align-items: flex-end;\n`;\n\nexport const CurrentTemp = styled.div`\n    border-left: 4px solid ${props => props.tempColor};\n    padding-left: 3rem;\n    margin: 0 5rem 0 0;\n    p {\n        text-transform: uppercase;\n        font-family: sans-serif;\n    }\n    h1 {\n        text-transform: uppercase;\n        font-family: 'Sarala', sans-serif;\n        font-weight: bold;\n        font-size: 3rem;\n        color: ${props => props.tempColor};\n    }\n`;\n\nexport const DisplayTitle = styled.div`\n    margin: 4rem 0 0 5rem;\n    padding-right: 1rem;\n    color: #282828;\n    text-transform: uppercase;\n    font-family: 'Sarala', sans-serif;\n    font-weight: bold;\n    h1 {\n        font-size: 3rem;   \n    }\n    h2 {\n        font-size: 2.5rem;\n    }\n    .location-title {\n        color: ${props => props.tempColor};\n    }\n`;\n\nexport const DisplayGraph = styled.div`\n    height: 400px;\n    width: 800px;\n    background-color: lightgrey;\n    border-left: solid 8px black;\n    border-bottom: solid 8px black;\n    margin: 4rem 0 0 5rem;\n`;\n\nexport const DataInfo = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 5.5rem;\n    padding: 3rem;\n    background: rgba(1, 139, 177, .2);\n    text-align: center;\n    p {\n        font-family: 'Sarala', sans-serif;\n        font-weight: bold;\n        color: #282828;\n        font-size: 1.4rem;\n        margin-left: 1.4rem;\n    }\n`;\n\nexport const GraphDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    margin-right: 2.5rem;\n`;\n\nexport const Dolores = styled.h1`\n    font-size: 3rem;\n    color: #018bb1;\n    text-transform: uppercase;\n    font-family: 'Sarala', sans-serif;\n    font-weight: bold;\n    text-align: center;\n    margin-top: 6rem;\n`;\n\nexport const Hr = styled.hr`\n    border: .2rem solid #CB8589;\n    margin: 4rem 6rem;\n`;\n","import React, { PureComponent } from 'react';\nimport { LandingContainer, LandingForm } from '../styles';\nimport { Link } from 'react-router-dom';\n\nexport default class Landing extends PureComponent {\n    state = {\n        zip: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({ zip: e.target.value });\n    }\n\n    render() {\n        const { zip } = this.state;\n        const linkUrl = `/${zip}`;\n        return (\n            <LandingContainer>\n                <h1>Weather.</h1>\n                <p>Enter your zip to get a 5-day forecast for your area.</p>\n                <LandingForm>\n                    <input type=\"text\" name=\"zip\" autoComplete=\"off\" onChange={this.handleChange}></input>\n                    <Link to={linkUrl}><button>Submit</button></Link>\n                </LandingForm>\n            </LandingContainer>\n        )\n    };\n\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { StyledHeader } from '../../styles';\n\nexport default function Header() {\n    return(\n        <StyledHeader>\n            <Link to=\"/\">Back</Link>\n        </StyledHeader>\n    )\n}\n","export const fetchWeather = async (zip) => {\n    let keyResponse = await fetch(`http://dataservice.accuweather.com/locations/v1/postalcodes/US/search?apikey=GkyViiHRqGoeGWJIsYJkl27SxwiH3DXH&q=${zip}`);\n    let keyData = await keyResponse.json();\n    let weatherResponse = await fetch(`http://dataservice.accuweather.com/forecasts/v1/hourly/12hour/${keyData[0].ParentCity.Key}?apikey=GkyViiHRqGoeGWJIsYJkl27SxwiH3DXH`)\n    let weatherData = await weatherResponse.json();\n    const weatherObject = {\n        cityData: keyData,\n        weatherData: weatherData\n    }\n    return weatherObject;\n    \n}\n","export const sortWeatherData = (data) => {\n    console.log('data in weather sort', data);\n    const weatherTrunc = data.map(d => {\n        return {\n            date: new Date(d.DateTime),\n            temp: d.Temperature.Value,\n        }\n    })\n    return weatherTrunc;\n}\n","\nexport const setColorFromCurrentTemp = currentTemp => {\n    if(currentTemp < 60 ) return '#6FB5E8';\n    else if (currentTemp >= 60 && currentTemp < 80) return '#F78E69';\n    else return '#931F1D';\n}\n","import React, { PureComponent } from 'react';\nimport Header from '../components/global/Header';\nimport { DisplayTitle, CurrentTemp, DisplayHeader, DataInfo, GraphDiv, Dolores } from '../styles';\nimport { FiCloudDrizzle } from 'react-icons/fi';\nimport { FaArrowCircleUp, FaArrowCircleDown } from 'react-icons/fa';\nimport { fetchWeather } from '../utils/fetchWeather.js';\nimport { sortWeatherData } from '../utils/sortWeatherData';\nimport { setColorFromCurrentTemp } from '../utils/setColorFromCurrentTemp';\nimport makeLineGraph from '../utils/makeLineGraph';\n\nexport default class DataDisplay extends PureComponent {\n    state = {\n        zip: this.props.match.params.zip,\n        data: null,\n        cityName: '',\n        stateName: '',\n        rainProp: '',\n        completedMount: false,\n        tempAvg: '',\n        tempLow: '',\n        tempHigh: '',\n        currentTemp: '',\n        tempColor: '',\n        highColor: '',\n        lowColor: ''\n    }\n\n    getWeather = (zip) => {\n        return fetchWeather(zip)\n            .then(results => this.setState({\n                data: sortWeatherData(results.weatherData),\n                cityName: results.cityData[0].EnglishName,\n                stateName: results.cityData[0].AdministrativeArea.ID,\n                rainProp: results.weatherData[0].PrecipitationProbability,\n                completedMount: true,\n                tempAvg: Math.floor((((sortWeatherData(results.weatherData)).map(d => d.temp)).reduce((a, b) => a + b, 0) / 12)),\n                tempHigh: Math.max(...(sortWeatherData(results.weatherData)).map(d => d.temp)),\n                tempLow: Math.min(...(sortWeatherData(results.weatherData)).map(d => d.temp)),\n                currentTemp: sortWeatherData(results.weatherData)[0].temp,\n                tempColor: setColorFromCurrentTemp(sortWeatherData(results.weatherData)[0].temp),\n                highColor: setColorFromCurrentTemp(Math.max(...(sortWeatherData(results.weatherData)).map(d => d.temp))),\n                lowColor: setColorFromCurrentTemp(Math.min(...(sortWeatherData(results.weatherData)).map(d => d.temp)))\n            }));\n    }\n\n    componentDidMount() {\n        this.getWeather(this.state.zip);\n    }\n\n    componentDidUpdate() {\n        makeLineGraph(this.state.data, this.state.tempColor);\n    }\n\n    render() {\n        const { cityName, stateName, rainProp, data, tempHigh, tempLow, currentTemp, tempColor, highColor, lowColor } = this.state;\n\n        return (\n            <>\n                <Header />\n                {data ?\n                    <>\n                        <DisplayHeader>\n                            <DisplayTitle tempColor={tempColor}>\n                                <h1>12-HR Temps for <span className=\"location-title\">{cityName}, {stateName}</span></h1>\n                            </DisplayTitle>\n                            <CurrentTemp tempColor={tempColor}>\n                                <p>Current Temp:</p>\n                                <h1>{currentTemp}&deg;</h1>\n                            </CurrentTemp>\n                        </DisplayHeader>\n                        <GraphDiv>\n                            <div id=\"svg\">\n                            </div>\n                        </GraphDiv>\n                        <DataInfo>\n                            <FiCloudDrizzle size=\"80\" color=\"#018bb1\" />\n                            <p>There is a {rainProp}% change it's gonna rain today.</p>\n                        </DataInfo>\n                        <DataInfo>\n                            <FaArrowCircleUp size=\"80\" color={highColor} />\n                            <p>The high over the next 12 hours will be {tempHigh}&deg;</p>\n                        </DataInfo>\n                        <DataInfo>\n                            <FaArrowCircleDown size=\"80\" color={lowColor} />\n                            <p>The low over the next 12 hours will be {tempLow}&deg;</p>\n                        </DataInfo>\n                    </> :\n                    <Dolores>Your content is loading</Dolores>}\n            </>\n        )\n    }\n}\n","import * as d3 from 'd3';\n\nexport default function makeLineGraph(data, tempColor) {\n    const margin = { top: 50, right: 50, bottom: 50, left: 50 };\n    const height = 440;\n    const width = 1100;\n\n    const x = d3.scaleTime()\n        .range([0, width]);\n\n    const y = d3.scaleLinear()\n        .range([height, 0]);\n\n    const graphLine = d3.line()\n        .x(d => x(d.date))\n        .y(d => y(d.temp));\n\n    const svg = d3.select('#svg')\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n    x.domain(d3.extent(data, d => d.date));\n    y.domain([0, (d3.max(data, d => d.temp) + 20)]);\n\n    svg.append('path')\n        .data([data])\n        .attr('class', 'line')\n        .attr('fill', 'none')\n        .attr('stroke', 'grey')\n        .attr('stroke-width', 0)\n        .attr('d', graphLine)\n        .transition()\n        .duration('1500')\n        .attr('stroke-width', 10)\n        .attr('stroke', '#CB8589')\n        .transition()\n        .duration('2500')\n        .attr('stroke-width', 4)\n        .attr('stroke', tempColor);\n\n    svg.append('g')\n        .attr('transform', `translate(0, ${height})`)\n        .call(d3.axisBottom(x));\n\n    svg.append('g')\n        .call(d3.axisLeft(y));\n\n    const mouseG = svg.append('g')\n        .attr('class', 'mouse-over-effects');\n\n    mouseG.append('path')\n        .attr('class', 'mouse-line')\n        .style('stroke', '#CB8589')\n        .style('stroke-width', '2px')\n        .style('opacity', '0');\n\n    const lines = (document.getElementsByClassName('line'));\n\n    const mousePerLine = mouseG.selectAll('.mouse-per-line')\n        .data([data])\n        .enter()\n        .append('g')\n        .attr('class', 'mouse-per-line');\n\n    mousePerLine.append('circle')\n        .attr('r', 14)\n        .style('stroke', '#CB8589')\n        .style('fill', 'none')\n        .style('stroke-width', '2px')\n        .style('opacity', '0');\n\n    mousePerLine.append('text')\n        .attr('transform', 'translate(25, -15)')\n        .style('font-family', 'sans-serif')\n        .style('font-size', '1.6rem')\n        .style('text-transform', 'uppercase');\n\n    mouseG.append('svg:rect')\n        .attr('width', width)\n        .attr('height', height)\n        .attr('fill', 'none')\n        .attr('pointer-events', 'all')\n        .on('mouseout', function () {\n            d3.select('.mouse-line')\n                .style('opacity', '0');\n            d3.selectAll('.mouse-per-line circle')\n                .style('opacity', '0');\n            d3.selectAll('.mouse-per-line text')\n                .style('opacity', '0');\n        })\n        .on('mouseover', function () {\n            d3.select('.mouse-line')\n                .style('opacity', '1');\n            d3.selectAll('.mouse-per-line circle')\n                .style('opacity', '1');\n            d3.selectAll('.mouse-per-line text')\n                .style('opacity', '1');\n        })\n        .on('mousemove', function () {\n            const mouse = d3.mouse(this);\n            d3.select('.mouse-line')\n                .attr('d', function () {\n                    let d = `M${mouse[0]}, ${height}`;\n                    d += ` ${mouse[0]}, 0`\n                    return d;\n                });\n\n            d3.selectAll('.mouse-per-line')\n                .attr('transform', function (d, i) {\n\n                    let beginning = 0;\n                    let end = lines[i].getTotalLength();\n                    let target = null;\n                    let pos = null;\n\n                    while (true) {\n                        target = Math.floor((beginning + end) / 2);\n                        pos = lines[i].getPointAtLength(target);\n                        if ((target === end || target === beginning) && pos.x !== mouse[0]) {\n                            break;\n                        }\n                        if (pos.x > mouse[0]) end = target;\n                        else if (pos.x < mouse[0]) beginning = target;\n                        else break;\n                    }\n\n                    d3.select(this).select('text')\n                        .text(y.invert(pos.y).toFixed(0));\n                    return \"translate(\" + mouse[0] + \",\" + pos.y +\")\";\n                });\n        }); \n}\n","import React from 'react';\nimport Landing from './pages/Landing';\nimport DataDisplay from './pages/DataDisplay';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Landing} />\n        <Route path=\"/:zip\" component={DataDisplay} />\n       </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config();\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}